#+TITLE: Funciones Utiles
* Intro
  #+BEGIN_QUOTE
  Funciones que no clasificaban en una categoría en particular (/por el momento/)
  #+END_QUOTE
* map-indexed - Obtener posición de los elementos de una colección + Transformar sus elementos
** Conceptos
   - la sintáxis es de la forma ~(map-indexed funcion-anonima coleccion)~
   - ~map-indexed~ iterar sobre una colección y transformar sus elementos, igual que ~map~ pero obtenemos el índice/posición de cada elemento

   #+BEGIN_QUOTE
   útil si necesitamos el índice/posición del elemento
   para generar elementos del DOM con ClojureScript
   #+END_QUOTE
** Ejemplo
   #+BEGIN_SRC clojure
     (def lista-contactos [{:nombre "carlos" :email "carlos@gmail.com"}
                           {:nombre "pepe" :email "pepe@gmail.com"}
                           {:nombre "samu" :email "samu@gmail.com"}])

     (defn formatear-contacto [contacto]
       (let [{:keys [nombre email]} contacto]
         (str nombre " (" email ")")))

     (defn render-contacto [index contacto]
       [:div {:class "contacto-detalle"
              :data-index index}
        [:div {:class "content"}
         (formatear-contacto contacto)]])

     (defn render-lista-contactos [contactos]
       [:div {:class "lista-contactos"}
        (map-indexed (fn [index contacto]
                       (render-contacto index contacto))
                     contactos)])
   #+END_SRC
** Referencias
*** Referencias Extraoficiales
    1. [[https://www.spacjer.com/blog/2015/11/24/lesser-known-clojure-keep-and-keep-indexed-functions/][Lesser known clojure (spacjer.com)]]


